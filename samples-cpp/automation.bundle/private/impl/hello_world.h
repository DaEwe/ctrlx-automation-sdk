#pragma once

// ---------------------------------------------------------------------------
// Include Files
// ---------------------------------------------------------------------------
#include <iostream>


// ---------------------------------------------------------------------------
// Name Spaces
// ---------------------------------------------------------------------------
namespace example {
  // ---------------------------------------------------------------------------
  // Declaration of symbolic constants
  // ---------------------------------------------------------------------------


  // ---------------------------------------------------------------------------
  // Declaration of macros
  // ---------------------------------------------------------------------------
  #define _CLASS_NAME_(x)   (           # x )
  #define CLASS_NAME(x)     (_CLASS_NAME_(x))


  // ---------------------------------------------------------------------------
  // Declaration of data types
  // ---------------------------------------------------------------------------


  // ---------------------------------------------------------------------------
  // Forward references
  // ---------------------------------------------------------------------------


  // ---------------------------------------------------------------------------
  // Declaration of classes and structures
  // ---------------------------------------------------------------------------
  class Example
  {
  private:
  public:
    Example() = default;
    virtual ~Example() = default;


    //! This method returns the class name.
    //!
    //! @return                      Return class name.
    static const char* getClassName(void) { return (CLASS_NAME(Example)); }

    void hello_world();
    void goodbye_world();

  };
}
