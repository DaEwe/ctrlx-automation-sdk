#cloud-config
hostname: ctrlX-sdk-amd64
chpasswd: { expire: False }
ssh_pwauth: True

users:
  - name: boschrexroth
    gecos: Default user for ctrlX AUTOMATION SDK builder VM
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: false
    # $ mkpasswd --method=SHA-512 --rounds=4096 boschrexroth
    passwd: $6$rounds=4096$C1jBPhpkzCeT7$n2KxrcOhTBhYXKAUVMxB2yOup.HVJaijyVwdkSLS4GYsL8hNAp.pqYivGHS1/L9bxyAFdtfBLXBaZvjXK6kQ8/
    #ssh-authorized-keys:
    # Add YOUR ssh public key from ~/.ssh/id_rsa.pub here:
    #  - ssh-rsa ...
    shell: /bin/bash

write_files:
  # install-snapcraft.sh
  - content: |
      #!/usr/bin/env bash     
      sudo snap install snapcraft --classic 2>/dev/null
    # Create in /tmp because /home/boschrexroth doesn't exists at this moment
    path: /tmp/cloud-config/install-snapcraft.sh
    permissions: '0755'

  # install-dotnet-sdk
  - content: |
      #!/usr/bin/env bash
      sudo snap install snapcraft --classic 2>/dev/null
      sudo snap install dotnet-sdk --classic 
      sudo ln -sv /snap/dotnet-sdk/current/dotnet /usr/local/bin/dotnet
      sh -c 'echo "export DOTNET_ROOT=/snap/dotnet-sdk/current" >> /home/boschrexroth/.bashrc'
    # Create in /tmp because /home/boschrexroth doesn't exists at this moment
    path: /tmp/cloud-config/install-dotnet-sdk.sh
    permissions: '0755'

  # install-nodejs-npm.sh
  - content: |
      #!/usr/bin/env bash
      sudo snap install snapcraft --classic 2>/dev/null
      sudo snap install node --classic
      npm config set prefix ${HOME}/npm
    # Create in /tmp because /home/boschrexroth doesn't exists at this moment
    path: /tmp/cloud-config/install-nodejs-npm.sh
    permissions: '0755'

  # install-go.sh
  - content: |
      #!/usr/bin/env bash
      sudo snap install snapcraft --classic 2>/dev/null
      sudo snap install go --classic
    # Create in /tmp because /home/boschrexroth doesn't exists at this moment
    path: /tmp/cloud-config/install-go.sh
    permissions: '0755'

  # install-sdk.sh
  - content: |
      #!/usr/bin/env bash
      sudo snap install snapcraft --classic 2>/dev/null

      wget https://github.com/boschrexroth/ctrlx-automation-sdk/releases/download/1.12.0/ctrlx-automation-sdk.1.12.0.zip
      unzip -XK ctrlx-automation-sdk.1.12.0.zip
      rm ctrlx-automation-sdk.1.12.0.zip

      sudo dpkg -i ctrlX-automation-sdk/deb/*.deb

      chmod a+x ctrlX-automation-sdk/bin/oss.flatbuffers/ubuntu20-gcc-aarch64/release/flatc 
      chmod a+x ctrlX-automation-sdk/bin/oss.flatbuffers/ubuntu20-gcc-x64/release/flatc
    # Create in /tmp because /home/boschrexroth doesn't exists at this moment
    path: /tmp/cloud-config/install-sdk.sh
    permissions: '0755'


# Proxy settings for apt                                                          #Remove-if-noproxy
apt:                                                                              #Remove-if-noproxy
  http_proxy: http://10.0.2.2:3128/                                               #Remove-if-noproxy
  https_proxy: http://10.0.2.2:3128/                                              #Remove-if-noproxy

# Install neccessary packages, will automatically set package_update: true, package_upgrade: true
packages:
  - ssh
  - zip
  - unzip
  - p7zip-full
  - git
  - curl
  - cifs-utils
  - apt-transport-https
  - crossbuild-essential-arm64
  - gcc
  - gdb-multiarch
  - whois
  - python3-pip
  - virtualenv
  - cmake
  - net-tools
  - pkg-config

# Run commands on first boot  
runcmd:
  # Proxy settings for wget                                                       #Remove-if-noproxy
  - sudo sh -c 'echo http_proxy = http://10.0.2.2:3128/ >> /etc/wgetrc'           #Remove-if-noproxy
  - sudo sh -c 'echo https_proxy = http://10.0.2.2:3128/ >> /etc/wgetrc'          #Remove-if-noproxy
  - sudo sh -c 'echo use_proxy = on >> /etc/wgetrc'                               #Remove-if-noproxy

  # Proxy settings for environment                                                #Remove-if-noproxy
  - sudo sh -c 'echo http_proxy=\"http://10.0.2.2:3128\" >> /etc/environment'     #Remove-if-noproxy
  - sudo sh -c 'echo https_proxy=\"http://10.0.2.2:3128\" >> /etc/environment'    #Remove-if-noproxy
  - sudo sh -c 'echo HTTP_PROXY=\"http://10.0.2.2:3128\" >> /etc/environment'     #Remove-if-noproxy
  - sudo sh -c 'echo HTTPS_PROXY=\"http://10.0.2.2:3128\" >> /etc/environment'    #Remove-if-noproxy
  - sudo sh -c 'echo no_proxy=localhost,127.0.0.1,.local >> /etc/environment'     #Remove-if-noproxy

  # https://wiki.ubuntu.com/MultiarchSpec
  - sudo dpkg --add-architecture arm64
  - sudo sh -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal main restricted universe" >> /etc/apt/sources.list.d/multiarch-libs.list'
  - sudo sh -c 'echo "deb [arch=arm64] http://ports.ubuntu.com/ focal-updates main restricted universe" >> /etc/apt/sources.list.d/multiarch-libs.list'
  # Qualify architecture
  - sudo sed -i 's/deb http:/deb [arch=amd64] http:/g' /etc/apt/sources.list

  # Update sources lists
  - sudo apt-get clean
  - sudo apt-get update

  # Install neccessary libs
  - sudo apt-get -y install libsystemd-dev:arm64
  - sudo apt-get -y install libsystemd-dev:amd64
  - sudo apt-get -y install libssl-dev:amd64
  - sudo apt-get -y install libssl-dev:arm64
  - sudo apt-get -y install libzmq3-dev:amd64
  - sudo apt-get -y install libzmq3-dev:arm64

  # Now move install scripts to /home/boschrexroth and change owner and group
  - sudo mv /tmp/cloud-config/install-*.sh /home/boschrexroth
  - sudo chown boschrexroth:boschrexroth /home/boschrexroth/install-*.sh

# Delayed reboot after installation
power_state:
  delay: "+1"
  mode: reboot
  message: ======================== Installation Finished - System will reboot ========================
  timeout: 60
  condition: True
    